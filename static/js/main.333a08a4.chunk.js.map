{"version":3,"sources":["components/Input.js","components/Inputs.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Input","typeInput","helperText","value","startIcon","endIcon","size","color","divInput","numRow","option","textOption","length","push","className","htmlFor","type","defaultValue","placeholder","Math","random","id","disabled","rows","renderInput","Inputs","href","Nav","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.333a08a4.chunk.js","sourcesContent":["import \"../styles/Input.css\";\r\n\r\nconst renderInput = (\r\n  divInput,\r\n  typeInput = \"\",\r\n  helperText = \"\",\r\n  value = \"\",\r\n  numRow,\r\n  size = \"\",\r\n  color = \"primary\",\r\n  option,\r\n  textOption = \"\",\r\n  startIcon=\"false\",\r\n  endIcon=\"false\"\r\n) => {\r\n  if (typeInput === \"error\") {\r\n    if(helperText.length > 0){\r\n      divInput.push(\r\n        <div className=\"flex--div error\">\r\n          <p>{`<Input ${helperText} error/>`}</p>\r\n          <label htmlFor=\"inp\" className=\"label--error\" >Label</label>\r\n          <input\r\n            key={Math.random()}\r\n            className={`error ${size} ${option}`}\r\n            type=\"text\"\r\n            defaultValue={value}\r\n            placeholder={`Placeholder`}\r\n          ></input>\r\n          <p className=\"helper--error\">{helperText}</p>\r\n        </div>)\r\n    }else {\r\n      divInput.push(\r\n        <div className=\"flex--div error\">\r\n          <p>{`<Input error ${textOption}/>`}</p>\r\n          <label className=\"label--error\" htmlFor=\"inp\">Label</label>\r\n          <input\r\n            key={Math.random()}\r\n            id=\"inp\"\r\n            type=\"text\"\r\n            defaultValue={value}\r\n            placeholder={`Placeholder`}\r\n            className={`error ${size} ${option}`}\r\n          ></input>\r\n          <p className=\"helper--error\">{helperText}</p>\r\n        </div>)\r\n    }\r\n  } else if (typeInput === \"disabled\") {\r\n    divInput.push(\r\n      <div className=\"flex--div\">\r\n        <p>{\"<Input disabled/>\"}</p>\r\n        <label htmlFor=\"inp\">Label</label>\r\n        <input id=\"inp\" type=\"text\" defaultValue={value} disabled placeholder=\"Placeholder\" key={Math.random()}/>\r\n      </div>\r\n    );\r\n  } else if (typeInput === \"multiline\") {\r\n    if(helperText.length > 0) {\r\n      divInput.push(\r\n        <div className=\"flex--div\">\r\n          <p>{`<Input multiline rows=${numRow}/>`}</p>\r\n          <label htmlFor=\"inp\">Label</label>\r\n          <textarea\r\n            className={`${color} ${size}`}\r\n            key={Math.random()}\r\n            id=\"inp\"\r\n            type=\"text\"\r\n            defaultValue={value}\r\n            rows={numRow}\r\n            placeholder=\"Placeholder\"\r\n          >           \r\n          </textarea>\r\n          <p>{helperText}</p>\r\n        </div>\r\n      );\r\n    }else{\r\n      divInput.push(\r\n      <div className=\"flex--div\">\r\n        <p>{`<Input multiline rows=${numRow}/>`}</p>\r\n        <label htmlFor=\"inp\">Label</label>\r\n        <textarea\r\n          className={`${color} ${size}`}\r\n          key={Math.random()}\r\n          id=\"inp\"\r\n          type=\"text\"\r\n          defaultValue={value}\r\n          rows={numRow}\r\n          placeholder=\"Placeholder\"\r\n        >           \r\n        </textarea>\r\n      </div>\r\n    );\r\n  }\r\n  } else {\r\n    if(helperText.length > 0) {\r\n      divInput.push(\r\n        <div className={`flex--div ${size}`}>\r\n          <p>{`<${typeInput} ${textOption}/>`}</p>\r\n          <label>Label</label>\r\n          <input\r\n            key={Math.random()}\r\n            className={`${color} ${option}`}\r\n            type=\"text\"\r\n            defaultValue={value}\r\n            placeholder={`${startIcon === \"true\" ? \"\" : \"\"} Placeholder `}\r\n          />\r\n          <p className=\"helper--text\">{helperText}</p>\r\n        </div>\r\n      );\r\n    }else{\r\n      divInput.push(\r\n      <div className={`flex--div ${size}`}>\r\n        <p>{`<${typeInput} ${textOption}/>`}</p>\r\n        <label>Label</label>\r\n        <input\r\n          key={Math.random()}\r\n          className={`${color} ${option}`}\r\n          type=\"text\"\r\n          defaultValue={value}\r\n          placeholder={`${startIcon === \"true\" ? \"\" : \"\"} Placeholder ${endIcon === \"true\" ? \"\" : \"\"}`}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  }\r\n};\r\n\r\nexport default function Input({\r\n  typeInput,\r\n  helperText,\r\n  value,\r\n  startIcon,\r\n  endIcon,\r\n  size,\r\n  color,\r\n  numRow,\r\n  option,\r\n  textOption\r\n}) {\r\n\r\n    const divInput = [];\r\n    renderInput(divInput, typeInput, helperText, value, numRow, size, color, option, textOption, startIcon, endIcon);\r\n\r\n  return (\r\n    <>\r\n      {divInput}\r\n      {/* <p>{`<Input ${typeInput} ${numRow > 0 ? `rows=${numRow}` : \"\"} />`}</p>\r\n        <label>\r\n            Label\r\n        </label>\r\n        {input ? \r\n            <input type=\"text\" placeholder=\"Placeholder\" {...isDisabled && \"disabled\"} {...value.length > 0 ? value={value} : value=\"\"}/>\r\n            : <textarea rows={numRow}></textarea>}\r\n        {helperText.length > 0 ? <p>{helperText}</p> : \"\"} */}\r\n    </>\r\n  );\r\n}\r\n","import \"../styles/Inputs.css\";\r\nimport Input from \"./Input\";\r\n\r\nexport default function Inputs() {\r\n\r\n    return(\r\n        <main className=\"main\">\r\n            <h2>\r\n                Inputs\r\n            </h2>\r\n            <section className=\"grid--section\">\r\n                <Input typeInput=\"Input\" option=\"input--normal\" />\r\n                <Input typeInput=\"&:hover, &:focus\" />\r\n                <Input typeInput=\"error\" option=\"error--normal\"/>\r\n                <Input typeInput=\"error\" textOption=\"&:hover, &:focus\"></Input>\r\n                <Input typeInput=\"disabled\"></Input>\r\n                <br></br>\r\n                <Input typeInput=\"Input\" helperText=\"Example Helper Text\" textOption=\"With Helper Text\"></Input>\r\n                <Input typeInput=\"error\" helperText=\"Example Helper Text Error\" textOption=\"With Helper Text\"></Input>\r\n                <Input typeInput=\"Input\" textOption=\"startIcon\" startIcon=\"true\"></Input>\r\n                <Input typeInput=\"Input\" textOption=\"endIcon\" endIcon=\"true\"></Input>\r\n                <Input typeInput=\"Input\" textOption=\"value='text'\" value=\"text\"></Input>\r\n                <br></br>\r\n                <Input typeInput=\"Input\" textOption=\"size='sm'\" size=\"sm\"></Input>\r\n                <Input typeInput=\"Input\" textOption=\"size='xl'\" size=\"xl\"></Input>\r\n                <Input typeInput=\"Input\" textOption=\"size='fullWidth'\" size=\"fullWidth\"></Input>\r\n                <br></br>\r\n                <Input typeInput=\"multiline\" numRow={5}></Input>\r\n                <br></br>\r\n               \r\n            </section>\r\n            <h3 className=\"author\">Author: José M Mojica -<a href=\"https://devchallenges.io/\">devchallenges.io</a></h3>\r\n        </main>\r\n    );\r\n};","import \"../styles/Nav.css\";\r\n\r\nexport default function Nav() {\r\n    return(\r\n        <header className=\"header\">\r\n            <h3>\r\n                <span className=\"header--span\">Dev</span>challenges.io\r\n            </h3>\r\n            <nav className=\"navbar\">\r\n                <ul>\r\n                    <li className=\"nav--item\">\r\n                        Typography                        \r\n                    </li>\r\n                    <li className=\"nav--item\" >\r\n                        Grid\r\n                    </li>\r\n                    <li className=\"nav--item\">\r\n                        Buttons\r\n                    </li>\r\n                    <li className=\"nav--item\">\r\n                        Inputs\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n};\r\n","import Inputs from \"./components/Inputs\";\nimport Nav from \"./components/Nav\";\nimport \"./App.css\";\n\nfunction App() {\n  return(\n    <div className=\"app\">\n      <Nav />\n      <Inputs></Inputs>\n    </div>\n  )\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}